version: 2.1
commands:
  install-bazel:
    steps:
      - run:
          name: Install bazel and RBE credential
          command: |
            # Install bazel
            curl -OL https://github.com/bazelbuild/bazel/releases/download/0.20.0/bazel-0.20.0-installer-linux-x86_64.sh
            chmod +x bazel-0.20.0-installer-linux-x86_64.sh
            sudo ./bazel-0.20.0-installer-linux-x86_64.sh

            # Install RBE credential
            bazel run @graknlabs_build_tools//ci:install-bazel-rbe-credential

  run-bazel-rbe:
    parameters:
      command:
        type: string
    steps:
      - run:
          command: |
            bazel run @graknlabs_build_tools//ci:run-bazel-rbe << parameters.command >>

  run-grakn-server:
    steps:
      - run:
          name: Grakn Server - Start
          command: |
            bazel build @graknlabs_grakn_core//:assemble-linux-targz
            mkdir dist
            tar -xvzf bazel-bin/external/graknlabs_grakn_core/assemble-linux-targz.tar.gz -C ./dist/
            nohup ./dist/grakn-core-all-linux/grakn server start

jobs:
  build:
    machine: true
    working_directory: ~/grakn
    steps:
      - checkout
      - install-bazel
      - run-bazel-rbe:
          command: bazel build //...

  test:
    machine: true
    working_directory: ~/grakn
    steps:
      - checkout
      - install-bazel
      - run-grakn-server
      - run: ./dist/grakn-core-all-linux/grakn console -f `pwd`/tests/support/basic-genealogy.gql -k gene
      - run: bazel test //:test-integration --test_output=streamed

  test-deployment:
    machine: true
    working_directory: ~/grakn
    steps:
      - checkout
      - install-bazel
      - run: |
          # TODO This is a bit less safe than manually writing the commit in the case of race conditions
          # Then reusing this ID in later steps
          bazel run //:deploy-npm -- test $NPM_REPO_USERNAME $NPM_REPO_PASSWORD dummy@grakn.ai
      - run-grakn-server
      - run: |
          # insert commit into VERSION file
          sed -i -e "s/SNAPSHOT/$CIRCLE_SHA1/g" VERSION
          npm install http://repo.grakn.ai/repository/test-npm-group/grakn-client/-/grakn-client-$(cat VERSION).tgz
          npm install jest
          cd tests/deployment/ && jest nodeApplicationTest.js



  sync-dependencies:
    machine: true
    steps:
      - checkout
      - install-bazel
      - run: sudo apt install -y expect
      - run: bazel run //:deploy-npm -- test $TEST_REPO_USERNAME $TEST_REPO_PASSWORD $TEST_REPO_EMAIL
      - run: |
          bazel run @graknlabs_build_tools//ci:sync-dependencies -- \
          --source client-nodejs:master \
          --targets docs:development

  release-approval:
    machine: true
    steps:
      - checkout
      - install-bazel
      - run: bazel run @graknlabs_build_tools//ci:release-approval

  release-npm:
    machine: true
    working_directory: ~/grakn
    steps:
      - checkout
      - install-bazel
      - run: bazel run //:deploy-npm -- npmjs $NPM_REPO_USERNAME $NPM_REPO_PASSWORD $NPM_REPO_EMAIL

  release-cleanup:
    machine: true
    steps:
      - checkout
      - run: git push --delete origin client-nodejs-release-branch

workflows:
  version: 2
  client-nodejs:
    jobs:
      - build
      - test
      - test-deployment
      - sync-dependencies:
          filters:
            branches:
              only: master
          requires:
            - build
            - test
            - test-deployment
      - release-approval:
          filters:
            branches:
              only: master
          requires:
            - sync-dependencies

  # the 'client-nodejs-release' workflow is triggered by the creation of 'client-nodejs-release-branch' branch in graknlabs/client-nodejs
  # it consists of jobs which:
  # - publishes client-nodejs to npm
  # - cleans up the 'client-nodejs-release-branch' branch which was created by the release-approval job
  client-nodejs-release:
    jobs:
      - release-npm:
          filters:
            branches:
              only: client-nodejs-release-branch
      - release-cleanup:
          requires:
            - release-npm
          filters:
            branches:
              only: client-nodejs-release-branch